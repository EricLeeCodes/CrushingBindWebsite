@page "/archives"
@using Client.Components.Public.Archives
@inject InMemoryDatabaseCache InMemoryDatabaseCache

<PageTitle>Crushing Bind | Archives</PageTitle>

<Navbar />

<main class="container min-vh-90 py-5">
    <div class="row">
        <div class="text-center bottom-spacing">
            <h1 class="my-3 cloudy-serif">Archives</h1>
            <p>Welcome to Crushing Bind!</p>
        </div>
        <div class="row">

            @if (InMemoryDatabaseCache.ArchiveModels != null)
            {
                for (int i = 0; i < InMemoryDatabaseCache.ArchiveModels.Count; i++)
                {
                    <div class="col-md-4">
                        <ArchivesCard ArchiveModel="InMemoryDatabaseCache.ArchiveModels[i]"/>
                    </div>
                }
            }


        </div>
    </div>


</main>

<Footer />


@implements IDisposable
@code
{
    protected override async Task OnInitializedAsync()
    {
        InMemoryDatabaseCache.OnArchiveModelsDataChanged += StateHasChanged;

        if (InMemoryDatabaseCache.ArchiveModels == null)
        {
            await InMemoryDatabaseCache.GetArchiveModelsFromDatabaseAndCache();
        }
    }

    //Unsubscribe from events or else there will be a memory leak.
    public void Dispose()
    {
        InMemoryDatabaseCache.OnArchiveModelsDataChanged -= StateHasChanged;
    }
}
